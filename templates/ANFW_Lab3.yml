AWSTemplateFormatVersion: 2010-09-09
Description: Creates 4 VPCs with 1 AZ, 6 Subnets, 1 NLB, 1 NAT GW, and two EC2 Instances. This template includes an EC2 nginx web server in a single AZ with SSM Instance Profile.
             **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a  stack from this template.
Parameters:
  AvailabilityZoneSelection:
    Description: Availability Zone
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
  LatestAmiId:
    Description: Latest EC2 AMI from Systems Manager Parameter Store
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.micro
Resources:
  #role for EC2 instances for systems manager
  EC2InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: ANFWEC2InstanceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      # The managed policy to allows the EC2 access to SSM permissions
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref EC2InstanceRole

  # Inspection VPC Deployment for the AWS Network Firwall
  InspectionVPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: 100.64.0.0/16
      Tags:
        - Key: Name
          Value: ANFW Inspection VPC

  InspectionTransitGatewaySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneSelection
      CidrBlock: 100.64.0.0/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Transit Gateway Subnet
      VpcId: !Ref InspectionVPC

  InspectionTransitGatewaySubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: Inspection TGW Route Table

  InspectionTransitGatewaySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InspectionTransitGatewaySubnet
      RouteTableId: !Ref InspectionTransitGatewaySubnetRouteTable

  InspectionFirewallSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneSelection
      CidrBlock: 100.64.0.16/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Firewall Subnet
      VpcId: !Ref InspectionVPC

  InspectionFirewallSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: Inspection Firewall Route Table

  InspectionFirewallSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InspectionFirewallSubnet
      RouteTableId: !Ref InspectionFirewallSubnetRouteTable

  # Central Egress VPC Deployment for the AWS Network Firwall
  CentralEgressVPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: 10.10.0.0/16
      Tags:
        - Key: Name
          Value: Central Egress VPC

  CentralEgressTransitGatewaySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneSelection
      CidrBlock: 10.10.0.0/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Transit Gateway Subnet
      VpcId: !Ref CentralEgressVPC

  CentralEgressTransitGatewaySubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CentralEgressVPC
      Tags:
        - Key: Name
          Value: Central Egress TGW Route Table

  CentralEgressTransitGatewaySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CentralEgressTransitGatewaySubnet
      RouteTableId: !Ref CentralEgressTransitGatewaySubnetRouteTable

  CentralEgressPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneSelection
      CidrBlock: 10.10.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet
      VpcId: !Ref CentralEgressVPC

  CentralEgressPublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CentralEgressVPC
      Tags:
        - Key: Name
          Value: Central Egress Public Route Table

  CentralEgressPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CentralEgressPublicSubnet
      RouteTableId: !Ref CentralEgressPublicSubnetRouteTable

  CentralEgressInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: "Central Egress VPC IGW"

  CentralEgressInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref CentralEgressInternetGateway
      VpcId: !Ref CentralEgressVPC

  CentralEgressPublicSubnetNATEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      
  CentralEgressPublicSubnetNATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - CentralEgressPublicSubnetNATEIP
          - AllocationId
      SubnetId: !Ref CentralEgressPublicSubnet
      Tags:
        - Key: Name
          Value: egress-natgw

  # Spoke A VPC Deployment for the AWS Network Firwall
  SpokeAVPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: 10.1.0.0/16
      Tags:
        - Key: Name
          Value: "Spoke A VPC"

  SpokeATransitGatewaySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneSelection
      CidrBlock: 10.1.0.0/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Transit Gateway Subnet
      VpcId: !Ref SpokeAVPC

  SpokeARouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SpokeAVPC
      Tags:
        - Key: Name
          Value: Spoke A Route Table

  SpokeATransitGatewaySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SpokeATransitGatewaySubnet
      RouteTableId: !Ref SpokeARouteTable

  SpokeAWorkloadSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneSelection
      CidrBlock: 10.1.1.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Workload Subnet
      VpcId: !Ref SpokeAVPC

  SpokeAWorkloadSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SpokeAWorkloadSubnet
      RouteTableId: !Ref SpokeARouteTable

  SpokeAEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "Instance Security Group"
      GroupDescription: "Allow ICMP from 10.0.0.0/8 "
      VpcId: !Ref SpokeAVPC
      SecurityGroupIngress:
        - IpProtocol: icmp
          ToPort: -1
          FromPort: -1
          CidrIp: 10.0.0.0/8

  SpokeAInstance:
    DependsOn: EC2InstanceRole
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref EC2InstanceProfile
      NetworkInterfaces:
        - DeviceIndex: 0        
          PrivateIpAddress: 10.1.1.4
          SubnetId: !Ref SpokeAWorkloadSubnet
          GroupSet:
            - !Ref SpokeAEC2SecurityGroup
      Tags:
        - Key: Name
          Value: "Spoke A Instance"

  # Spoke B VPC Deployment for the AWS Network Firwall
  SpokeBVPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: 10.2.0.0/16
      Tags:
        - Key: Name
          Value: Spoke B VPC

  SpokeBTransitGatewaySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneSelection
      CidrBlock: 10.2.0.0/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: "Transit Gateway Subnet"
      VpcId: !Ref SpokeBVPC

  SpokeBRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SpokeBVPC
      Tags:
        - Key: Name
          Value: Spoke B Route Table

  SpokeBTransitGatewaySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SpokeBTransitGatewaySubnet
      RouteTableId: !Ref SpokeBRouteTable

  SpokeBWorkloadSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneSelection
      CidrBlock: 10.2.1.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Workload Subnet
      VpcId: !Ref SpokeBVPC  

  SpokeBWorkloadSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SpokeBWorkloadSubnet
      RouteTableId: !Ref SpokeBRouteTable

  SpokeBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "Instance Security Group"
      GroupDescription: "Allow ICMP from 10.0.0.0/8 "
      VpcId: !Ref SpokeBVPC
      SecurityGroupIngress:
        - IpProtocol: icmp
          ToPort: -1
          FromPort: -1
          CidrIp: 10.0.0.0/8

  SpokeBInstance:
    DependsOn: EC2InstanceRole
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref EC2InstanceProfile
      NetworkInterfaces:
        - DeviceIndex: 0        
          PrivateIpAddress: 10.2.1.4
          SubnetId: !Ref SpokeBWorkloadSubnet
          GroupSet:
            - !Ref SpokeBEC2SecurityGroup
      Tags:
        - Key: Name
          Value: "Spoke B Instance"

  # Transit Gateway and Transit Gateway attachment configuration
  TransitGateway:
    Type: AWS::EC2::TransitGateway
    Properties:
      AmazonSideAsn: 64512
      Description: ANFW Tranist Gateway
      AutoAcceptSharedAttachments: disable
      DefaultRouteTableAssociation: disable
      DefaultRouteTablePropagation: disable
      DnsSupport: enable
      VpnEcmpSupport: enable
      MulticastSupport: disable

  InspectionVPCAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - !Ref InspectionTransitGatewaySubnet
      TransitGatewayId: !Ref TransitGateway
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: Inspection VPC TGW Attachment

  CentralEgressVPCAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - !Ref CentralEgressTransitGatewaySubnet
      TransitGatewayId: !Ref TransitGateway
      VpcId: !Ref CentralEgressVPC
      Tags:
        - Key: Name
          Value: Central Egress VPC TGW Attachment

  SpokeAVPCVPCAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - !Ref SpokeATransitGatewaySubnet
      TransitGatewayId: !Ref TransitGateway
      VpcId: !Ref SpokeAVPC
      Tags:
        - Key: Name
          Value: Spoke A VPC TGW Attachment

  SpokeBVPCVPCAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - !Ref SpokeBTransitGatewaySubnet
      TransitGatewayId: !Ref TransitGateway
      VpcId: !Ref SpokeBVPC
      Tags:
        - Key: Name
          Value: Spoke B VPC TGW Attachment

  SpokeInspectionRouteTable:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties: 
      TransitGatewayId: !Ref TransitGateway
      Tags:
        - Key: Name
          Value: Spoke Inspection Route Table 

  FirewallRouteTable:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties: 
      TransitGatewayId: !Ref TransitGateway
      Tags:
        - Key: Name
          Value: Firewall Route Table

  CentralEgressRouteTable:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties: 
      TransitGatewayId: !Ref TransitGateway
      Tags:
        - Key: Name
          Value: Central Egress Route Table

  # AWS Network Firewall Configuration 
  ICMPAlertStatefulRuleGroup:
    Type: AWS::NetworkFirewall::RuleGroup
    Properties:
      RuleGroupName: ICMP-Alert-Rule-Group
      Type: STATEFUL
      Capacity: 100
      RuleGroup:
        RulesSource:
          StatefulRules:
            - Action: ALERT
              Header:
                Direction: ANY
                Protocol: ICMP
                Destination: ANY
                Source: ANY
                DestinationPort: ANY
                SourcePort: ANY
              RuleOptions:
                - Keyword: "sid:1"
      Tags:
        - Key: Name
          Value: ICMP Alert Rule Group 

  InspectionFirewallPolicy:
    Type: AWS::NetworkFirewall::FirewallPolicy
    Properties:
      FirewallPolicyName: Inspection-Firewall-Policy
      FirewallPolicy:
        StatelessDefaultActions:
          - 'aws:forward_to_sfe'
        StatelessFragmentDefaultActions:
          - 'aws:forward_to_sfe'
        StatefulRuleGroupReferences:
          - ResourceArn: !Ref ICMPAlertStatefulRuleGroup
      Tags:
        - Key: Name
          Value: Inspection Firewall Policy

  InspectionFirewall:
    Type: AWS::NetworkFirewall::Firewall
    Properties:
      FirewallName: ANFW-Lab-Firewall
      FirewallPolicyArn: !Ref InspectionFirewallPolicy
      VpcId: !Ref InspectionVPC
      SubnetMappings:
        - SubnetId: !Ref InspectionFirewallSubnet
      Description: Egress Firewall

  InspectionFirewallLogFlowGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: inspection-fw/flow

  InspectionFirewallLogAlertGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: inspection-fw/alert
    
  InspectionFirewallLog:
    Type: AWS::NetworkFirewall::LoggingConfiguration
    Properties:
      FirewallArn: !Ref InspectionFirewall
      LoggingConfiguration:
        LogDestinationConfigs:
          - LogType: FLOW
            LogDestinationType: CloudWatchLogs
            LogDestination:
              logGroup: inspection-fw/flow
          - LogType: ALERT
            LogDestinationType: CloudWatchLogs
            LogDestination:
              logGroup: inspection-fw/alert
