
AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS Firewall manager workshop base template."

Parameters:
  LatestAmiId:
    Description: Latest EC2 AMI from Systems Manager Parameter Store
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:

  NWFWAlertsLogsS3Bucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    Properties:
      BucketName: !Join ['', ['fwmworkshop-alert-logs-', !Select [2, !Split [/, !Ref AWS::StackId ]]]]

  NWFWFlowLogsS3Bucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    Properties:
      BucketName: !Join ['', ['fwmworkshop-flow-logs-', !Select [2, !Split [/, !Ref AWS::StackId ]]]]

  IAMRoleWithSSM:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonSSMPatchAssociation
      RoleName: IAMRoleWithSSM

  IAMEC2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - Ref: "IAMRoleWithSSM"

  #Configure the VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.150.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: AWSWorkshop-Procurement-Production-VPC
        - Key: Environment
          Value: AWSWorkshop-Production
     
#Configure the IGW
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AWSWorkshop-Procurement-Production-IGW
        - Key: Environment
          Value: AWSWorkshop-Production
#Attach IGW
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
#Configure Public Subnet A
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: "10.150.1.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: AWSWorkshop-Procurement-Production Public Subnet A (AZ1)
        - Key: Environment
          Value: AWSWorkshop-Production
 #Configure App Subnet A
  AppSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: "10.150.0.0/24"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: AWSWorkshop-Procurement-Production App Subnet A (AZ1)
        - Key: Environment
          Value: AWSWorkshop-Production
 
     
#Configure Nat Gateway A/B and allocate Elastic IPs
  NatGatewayAEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGatewayBEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayAEIP.AllocationId
      SubnetId: !Ref PublicSubnetA

 
#Configure Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: AWSWorkshop-Procurement-Production Public Routes
#Configure Public Route
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
#Associate Subnet A and B (Wordpress Public) to Route Table
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetA

#Configure Application Subnet A Route Table
  AppRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: AWSWorkshop-Procurement-Production App Routes (AZ1)

  AppRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref AppRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA

  AppARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref AppRouteTableA
      SubnetId: !Ref AppSubnetA
  
  TestDBAccessSG2:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "TestDBAccessSG2"
        GroupName: "TestDBAccessSG2"
        Tags: 
          - Key: Name
            Value: "TestDBAccessSG2"  
          - Key: "AWSWorkshop-Department"
            Value: "SalesAndMarketing"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "200" 
          - Key: "AWSWorkshop-Application"
            Value: "UserRegistration"
        VpcId: !Ref VPC
        SecurityGroupIngress: 
          - 
            CidrIp: "52.0.0.0/24"
            FromPort: 1521
            IpProtocol: "tcp"
            ToPort: 1521
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  TestDBAccessSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "TestDBAccessSG"
        GroupName: "TestDBAccessSG"
        Tags: 
          - Key: Name
            Value: "TestDBAccessSG"  
          - Key: "AWSWorkshop-Department"
            Value: "SalesAndMarketing"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "200" 
          - Key: "AWSWorkshop-Application"
            Value: "UserRegistration"
        VpcId: !Ref VPC
        SecurityGroupIngress: 
          - 
            CidrIp: "52.0.0.0/24"
            FromPort: 3306
            IpProtocol: "tcp"
            ToPort: 3306
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  PortalAccessAG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "PortalAccessSG"
        GroupName: "PortalAccessSG"
        Tags: 
          - Key: Name
            Value: "PortalAccessSG"  
          - Key: "AWSWorkshop-Department"
            Value: "Procurement"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "100" 
          - Key: "AWSWorkshop-Application"
            Value: "OrderManagement"

        VpcId: !Ref VPC
        SecurityGroupIngress: 
          - 
            CidrIp: "0.0.0.0/0"
            FromPort: 443
            IpProtocol: "tcp"
            ToPort: 443
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  ServerManagementSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "ServerManagementSG"
        GroupName: "ServerManagementSG"
        Tags: 
          - Key: Name
            Value: "ServerManagementSG"  
          - Key: "AWSWorkshop-Department"
            Value: "Procurement"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "100" 
          - Key: "AWSWorkshop-Application"
            Value: "OrderManagement"
        VpcId: !Ref VPC
        SecurityGroupIngress: 
          - 
            CidrIp: "52.0.0.0/16"
            FromPort: 22
            IpProtocol: "tcp"
            ToPort: 22
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  CorporateAccessSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "CorporateAccessSG"
        GroupName: "CorporateAccessSG"
        Tags: 
          - Key: Name
            Value: "CorporateAccessSG"  
          - Key: "AWSWorkshop-Department"
            Value: "Procurement"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "100" 
          - Key: "AWSWorkshop-Application"
            Value: "OrderManagement"
        VpcId: !Ref VPC
        SecurityGroupIngress: 
          - 
            CidrIp: "52.0.0.0/16"
            FromPort: 22
            IpProtocol: "tcp"
            ToPort: 22
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  TestSecurityGroup3:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "TestSecurityGroup3"
        GroupName: "TestSecurityGroup3"
        Tags: 
          - Key: Name
            Value: "TestSecurityGroup3"  
          - Key: "AWSWorkshop-Department"
            Value: "SalesAndMarketing"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-AWSWorkshop-CostCenter"
            Value: "200" 
 
        VpcId: !Ref VPC
        SecurityGroupIngress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"
          - 
            CidrIp: "52.0.0.0/16"
            FromPort: 3389
            IpProtocol: "tcp"
            ToPort: 3389
        SecurityGroupEgress: 
          - 
            CidrIp: "53.0.0.0/8"
            IpProtocol: "-1"

  DBAccessSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "DBAccessSG"
        GroupName: "DBAccessSG"
        Tags: 
          - Key: Name
            Value: "DBAccessSG"  
          - Key: "AWSWorkshop-Department"
            Value: "Procurement"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "100" 
          - Key: "AWSWorkshop-Application"
            Value: "OrderManagement"
        VpcId: !Ref VPC
        SecurityGroupIngress: 
          - 
            SourceSecurityGroupId: !Ref PortalAccessAG
            SourceSecurityGroupOwnerId: !Ref AWS::AccountId
            FromPort: 3306
            IpProtocol: "tcp"
            ToPort: 3306
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  TestSecurityGroup2:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "TestSecurityGroup2"
        GroupName: "TestSecurityGroup2"
        Tags: 
          - Key: Name
            Value: "TestSecurityGroup2"  
          - Key: "AWSWorkshop-Department"
            Value: "SalesAndMarketing"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "100" 
          - Key: "AWSWorkshop-Application"
            Value: "UserRegistration"
        VpcId: !Ref VPC
        SecurityGroupIngress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"
          - 
            CidrIp: "52.0.0.0/16"
            FromPort: 3389
            IpProtocol: "tcp"
            ToPort: 3389
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  FTPAcccesSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "FTPAcccesSG"
        GroupName: "FTPAcccesSG"
        Tags: 
          - Key: Name
            Value: "FTPAcccesSG"  
          - Key: "AWSWorkshop-Department"
            Value: "Procurement"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "100" 
          - Key: "AWSWorkshop-Application"
            Value: "OrderManagement"
        VpcId: !Ref VPC
        SecurityGroupIngress: 
          - 
            CidrIp: "73.120.120.0/24"
            FromPort: 22
            IpProtocol: "tcp"
            ToPort: 22
          - 
            CidrIp: "72.120.120.0/24"
            FromPort: 22
            IpProtocol: "tcp"
            ToPort: 22
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  TestSecurityGroup1:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "TestSecurityGroup1"
        GroupName: "TestSecurityGroup1"
        Tags: 
          - Key: Name
            Value: "TestSecurityGroup1"  
          - Key: "AWSWorkshop-Department"
            Value: "Procurement"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "100" 
          - Key: "AWSWorkshop-Application"
            Value: "OrderManagement"
        VpcId: !Ref VPC
        SecurityGroupIngress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"
          - 
            CidrIp: "52.0.0.0/16"
            FromPort: 3389
            IpProtocol: "tcp"
            ToPort: 3389
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"
  DBServer:
    Type: "AWS::EC2::Instance"
    Properties:
        ImageId: !Ref LatestAmiId
        InstanceType: "t2.micro"
        Tenancy: "default"
        SubnetId: !Ref AppSubnetA
        SecurityGroupIds: 
          - !Ref DBAccessSG
        SourceDestCheck: true
        IamInstanceProfile:  !Ref IAMEC2InstanceProfile
        Tags: 
          - Key: "AWSWorkshop-Department"
            Value: "Procurement"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "100" 
          - Key: "AWSWorkshop-Application"
            Value: "OrderManagement"
          - Key: "AWSWorkshop-ApplicationTier"
            Value: "Database"
  WebServer:
    Type: "AWS::EC2::Instance"
    Properties:
        ImageId: !Ref LatestAmiId
        InstanceType: "t2.micro"
        Tenancy: "default"
        SubnetId: !Ref PublicSubnetA
        SecurityGroupIds: 
          - !Ref PortalAccessAG
          - !Ref CorporateAccessSG
        SourceDestCheck: true
        IamInstanceProfile:  !Ref IAMEC2InstanceProfile
        Tags: 
          - Key: "AWSWorkshop-Department"
            Value: "Procurement"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "100" 
          - Key: "AWSWorkshop-Application"
            Value: "OrderManagement"
          - Key: "AWSWorkshop-ApplicationTier"
            Value: "WebServer"
  ManagementServer:
    Type: "AWS::EC2::Instance"
    Properties:
        ImageId: !Ref LatestAmiId
        InstanceType: "t2.micro"
        Tenancy: "default"
        SubnetId: !Ref PublicSubnetA
        SecurityGroupIds: 
          - !Ref FTPAcccesSG
        SourceDestCheck: true
        IamInstanceProfile:  !Ref IAMEC2InstanceProfile
        Tags: 
          - Key: "AWSWorkshop-Department"
            Value: "Procurement"
          - Key: "AWSWorkshop-Environment"
            Value: "Production" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "100" 
          - Key: "AWSWorkshop-Application"
            Value: "OrderManagement"
          - Key: "AWSWorkshop-ApplicationTier"
            Value: "FTPServer"
  VPC1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.160.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: AWSWorkshop-Finance-Staging-VPC
        - Key: Environment
          Value: AWSWorkshop-Staging
     
#Configure the IGW
  InternetGateway1:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AWSWorkshop-Finance-Staging-IGW
        - Key: Environment
          Value: AWSWorkshop-Staging
#Attach IGW
  InternetGatewayAttachment1:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway1
      VpcId: !Ref VPC1
#Configure Public Subnet A
  PublicSubnetA1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: "10.160.1.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: AWSWorkshop-Finance-Staging Public Subnet A (AZ1)
        - Key: Environment
          Value: AWSWorkshop-Staging
 #Configure App Subnet A
  AppSubnetA1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: "10.160.0.0/24"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: AWSWorkshop-Finance-Staging App Subnet A (AZ1)
        - Key: Environment
          Value: AWSWorkshop-Staging
 
     
#Configure Nat Gateway A/B and allocate Elastic IPs
  NatGatewayAEIP1:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment1
    Properties:
      Domain: vpc

  NatGatewayBEIP1:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment1
    Properties:
      Domain: vpc

  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayAEIP1.AllocationId
      SubnetId: !Ref PublicSubnetA1

 
#Configure Public Route Table
  PublicRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: AWSWorkshop-Finance-Staging Public Routes
#Configure Public Route
  DefaultPublicRoute1:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment1
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway1
#Associate Subnet A and B (Wordpress Public) to Route Table
  PublicSubnetARouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      SubnetId: !Ref PublicSubnetA1

#Configure Application Subnet A Route Table
  AppRouteTableA1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: AWSWorkshop-Finance-Staging App Routes (AZ1)

  AppRouteA1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref AppRouteTableA1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB

  AppARouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref AppRouteTableA1
      SubnetId: !Ref AppSubnetA1
  
  TestDBAccessSG21:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "TestDBAccessSG21"
        GroupName: "TestDBAccessSG21"
        Tags: 
          - Key: Name
            Value: "TestDBAccessSG21"  
          - Key: "AWSWorkshop-Department"
            Value: "SalesAndMarketing"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "200" 
          - Key: "AWSWorkshop-Application"
            Value: "UserRegistration"
        VpcId: !Ref VPC1
        SecurityGroupIngress: 
          - 
            CidrIp: "52.0.0.0/24"
            FromPort: 1521
            IpProtocol: "tcp"
            ToPort: 1521
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  TestDBAccessSG1:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "TestDBAccessSG1"
        GroupName: "TestDBAccessSG1"
        Tags: 
          - Key: Name
            Value: "TestDBAccessSG1"  
          - Key: "AWSWorkshop-Department"
            Value: "SalesAndMarketing"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "200" 
          - Key: "AWSWorkshop-Application"
            Value: "UserRegistration"
        VpcId: !Ref VPC1
        SecurityGroupIngress: 
          - 
            CidrIp: "52.0.0.0/24"
            FromPort: 3306
            IpProtocol: "tcp"
            ToPort: 3306
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  PortalAccessSG1:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "PortalAccessSG1"
        GroupName: "PortalAccessSG1"
        Tags: 
          - Key: Name
            Value: "PortalAccessSG1"  
          - Key: "AWSWorkshop-Department"
            Value: "Finance"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "300" 
          - Key: "AWSWorkshop-Application"
            Value: "Billing"

        VpcId: !Ref VPC1
        SecurityGroupIngress: 
          - 
            CidrIp: "0.0.0.0/0"
            FromPort: 443
            IpProtocol: "tcp"
            ToPort: 443
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  ServerManagementSG1:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "ServerManagementSG1"
        GroupName: "ServerManagementSG1"
        Tags: 
          - Key: Name
            Value: "ServerManagementSG1"  
          - Key: "AWSWorkshop-Department"
            Value: "Finance"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "300" 
          - Key: "AWSWorkshop-Application"
            Value: "Billing"
        VpcId: !Ref VPC1
        SecurityGroupIngress: 
          - 
            CidrIp: "52.0.0.0/16"
            FromPort: 22
            IpProtocol: "tcp"
            ToPort: 22
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  CorporateAccessSG1:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "CorporateAccessSG1"
        GroupName: "CorporateAccessSG1"
        Tags: 
          - Key: Name
            Value: "CorporateAccessSG1"  
          - Key: "AWSWorkshop-Department"
            Value: "Finance"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "300" 
          - Key: "AWSWorkshop-Application"
            Value: "Billing"
        VpcId: !Ref VPC1
        SecurityGroupIngress: 
          - 
            CidrIp: "52.0.0.0/16"
            FromPort: 22
            IpProtocol: "tcp"
            ToPort: 22
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  TestSecurityGroup31:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "TestSecurityGroup31"
        GroupName: "TestSecurityGroup31"
        Tags: 
          - Key: Name
            Value: "TestSecurityGroup31"  
          - Key: "AWSWorkshop-Department"
            Value: "SalesAndMarketing"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-AWSWorkshop-CostCenter"
            Value: "200" 
 
        VpcId: !Ref VPC1
        SecurityGroupIngress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"
          - 
            CidrIp: "52.0.0.0/16"
            FromPort: 3389
            IpProtocol: "tcp"
            ToPort: 3389
        SecurityGroupEgress: 
          - 
            CidrIp: "53.0.0.0/8"
            IpProtocol: "-1"

  DBAccessSG1:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "DBAccessSG1"
        GroupName: "DBAccessSG1"
        Tags: 
          - Key: Name
            Value: "DBAccessSG1"  
          - Key: "AWSWorkshop-Department"
            Value: "Finance"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "300" 
          - Key: "AWSWorkshop-Application"
            Value: "Billing"
        VpcId: !Ref VPC1
        SecurityGroupIngress: 
          - 
            SourceSecurityGroupId: !Ref PortalAccessSG1
            SourceSecurityGroupOwnerId: !Ref AWS::AccountId
            FromPort: 3306
            IpProtocol: "tcp"
            ToPort: 3306
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  TestSecurityGroup21:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "TestSecurityGroup21"
        GroupName: "TestSecurityGroup21"
        Tags: 
          - Key: Name
            Value: "TestSecurityGroup21"       
          - Key: "AWSWorkshop-Department"
            Value: "SalesAndMarketing"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "300" 
          - Key: "AWSWorkshop-Application"
            Value: "UserRegistration"
        VpcId: !Ref VPC1
        SecurityGroupIngress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"
          - 
            CidrIp: "52.0.0.0/16"
            FromPort: 3389
            IpProtocol: "tcp"
            ToPort: 3389
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  FTPAcccesSG1:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "FTPAcccesSG1"
        GroupName: "FTPAcccesSG1"
        Tags: 
          - Key: Name
            Value: "FTPAcccesSG1"
          - Key: "AWSWorkshop-Department"
            Value: "Finance"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "300" 
          - Key: "AWSWorkshop-Application"
            Value: "Billing"
        VpcId: !Ref VPC1
        SecurityGroupIngress: 
          - 
            CidrIp: "73.120.120.0/24"
            FromPort: 22
            IpProtocol: "tcp"
            ToPort: 22
          - 
            CidrIp: "72.120.120.0/24"
            FromPort: 22
            IpProtocol: "tcp"
            ToPort: 22
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"

  TestSecurityGroup11:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "TestSecurityGroup11"
        GroupName: "TestSecurityGroup11"
        Tags: 
          - Key: Name
            Value: "TestSecurityGroup11"
          - Key: "AWSWorkshop-Department"
            Value: "Finance"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "300" 
          - Key: "AWSWorkshop-Application"
            Value: "Billing"
        VpcId: !Ref VPC1
        SecurityGroupIngress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"
          - 
            CidrIp: "52.0.0.0/16"
            FromPort: 3389
            IpProtocol: "tcp"
            ToPort: 3389
        SecurityGroupEgress: 
          - 
            CidrIp: "0.0.0.0/0"
            IpProtocol: "-1"
  DBServer1:
    Type: "AWS::EC2::Instance"
    Properties:
        ImageId: !Ref LatestAmiId
        InstanceType: "t2.micro"
        Tenancy: "default"
        SubnetId: !Ref AppSubnetA1
        SecurityGroupIds: 
          - !Ref DBAccessSG1
        SourceDestCheck: true
        IamInstanceProfile:  !Ref IAMEC2InstanceProfile
        Tags: 
          - Key: "AWSWorkshop-Department"
            Value: "Finance"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "300" 
          - Key: "AWSWorkshop-Application"
            Value: "Billing"
          - Key: "AWSWorkshop-ApplicationTier"
            Value: "Database"
  WebServer1:
    Type: "AWS::EC2::Instance"
    Properties:
        ImageId: !Ref LatestAmiId
        InstanceType: "t2.micro"
        Tenancy: "default"
        SubnetId: !Ref PublicSubnetA1
        SecurityGroupIds: 
          - !Ref PortalAccessSG1
          - !Ref CorporateAccessSG1
        SourceDestCheck: true
        IamInstanceProfile:  !Ref IAMEC2InstanceProfile
        Tags: 
          - Key: "AWSWorkshop-Department"
            Value: "Finance"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "300" 
          - Key: "AWSWorkshop-Application"
            Value: "Billing"
          - Key: "AWSWorkshop-ApplicationTier"
            Value: "WebServer"
  ManagementServer1:
    Type: "AWS::EC2::Instance"
    Properties:
        ImageId: !Ref LatestAmiId
        InstanceType: "t2.micro"
        Tenancy: "default"
        SubnetId: !Ref PublicSubnetA1
        SecurityGroupIds: 
          - !Ref FTPAcccesSG1
        SourceDestCheck: true
        IamInstanceProfile:  !Ref IAMEC2InstanceProfile
        Tags: 
          - Key: "AWSWorkshop-Department"
            Value: "Finance"
          - Key: "AWSWorkshop-Environment"
            Value: "Staging" 
          - Key: "AWSWorkshop-CostCenter"
            Value: "300" 
          - Key: "AWSWorkshop-Application"
            Value: "Billing"
          - Key: "AWSWorkshop-ApplicationTier"
            Value: "FTPServer"

  
